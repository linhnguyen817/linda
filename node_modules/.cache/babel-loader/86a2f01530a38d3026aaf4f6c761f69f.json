{"ast":null,"code":"var _jsxFileName = \"/Users/linh/linda/src/App.js\",\n    _s = $RefreshSig$();\n\n// import {ReactComponent as ReactLogo} from './images/cloud.svg';\nimport { useState, useEffect } from 'react';\nimport './styles.css';\nimport cloud from \"./images/cloud.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Emoji = ({\n  symbol,\n  label\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"emoji\",\n  role: \"img\",\n  \"aria-label\": label ? label : \"\",\n  \"aria-hidden\": label ? \"false\" : \"true\",\n  children: symbol\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = Emoji;\nconst numClouds = 10;\nconst minCloudHeight = 20;\nconst maxCloudHeight = 30;\n\nfunction generateClouds() {\n  var clouds = [];\n\n  for (var i = 0; i < numClouds; i++) {\n    clouds.push({\n      id: i,\n      height: Math.floor(Math.random() * (maxCloudHeight - minCloudHeight + 1)) + minCloudHeight,\n      reflectedImage: Math.random() < 0.5 // TODO: emoji: ,\n\n    });\n  }\n\n  return clouds;\n}\n\n;\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [running, setRunning] = useState(1);\n  const [clouds, setClouds] = useState([]);\n  useEffect(() => {\n    for (let i = 1; i <= 1; i++) {\n      setTimeout(() => setClouds(arr => [...arr, {\n        height: Math.floor(Math.random() * (maxCloudHeight - minCloudHeight + 1)) + minCloudHeight,\n        reflectedImage: Math.random() < 0.5\n      }]));\n    }\n  }, []);\n  console.log(clouds);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of clouds: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(0);\n        setRunning(1);\n      },\n      children: \"Start over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You're doing great! \", /*#__PURE__*/_jsxDEV(Emoji, {\n        symbol: \"\\uD83D\\uDE05\",\n        label: \"nervous-laugh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: clouds.map((height, reflectedImage, key) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cloud,\n          className: \"cloud\",\n          alt: \"cloud\",\n          onAnimationEnd: () => setRunning(0),\n          running: running // onClick={() => {\n          //   setCount(count + 1);\n          //   setRunning(0)\n          //   }\n          // }\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"q7TIzrWpE6/ql/DOM7V66gRCYU0=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Emoji\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/linh/linda/src/App.js"],"names":["useState","useEffect","Emoji","symbol","label","numClouds","minCloudHeight","maxCloudHeight","generateClouds","clouds","i","push","id","height","Math","floor","random","reflectedImage","App","count","setCount","running","setRunning","setClouds","setTimeout","arr","console","log","map","key","cloud"],"mappings":"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","sourcesContent":["// import {ReactComponent as ReactLogo} from './images/cloud.svg';\nimport { useState, useEffect } from 'react';\nimport './styles.css';\nimport cloud from './images/cloud.svg';\n\nconst Emoji = ({symbol, label}) => (\n  <span\n      className=\"emoji\"\n      role=\"img\"\n      aria-label={label ? label : \"\"}\n      aria-hidden={label ? \"false\" : \"true\"}\n  >\n      {symbol}\n  </span>\n);\n\nconst numClouds = 10;\nconst minCloudHeight = 20;\nconst maxCloudHeight = 30;\nfunction generateClouds() {\n  var clouds = [];\n  for (var i = 0; i < numClouds; i++) {\n    clouds.push({\n      id: i,\n      height: Math.floor(Math.random() * (maxCloudHeight - minCloudHeight + 1)) + minCloudHeight,\n      reflectedImage: Math.random() < 0.5,\n      // TODO: emoji: ,\n    });\n  }\n  return clouds\n};\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [running, setRunning] = useState(1);\n  const [clouds, setClouds] = useState([]);\n\n  useEffect(() => {\n    for (let i = 1; i <= 1 ; i++) {\n      setTimeout(() => setClouds(arr => [...arr, {\n        height: Math.floor(Math.random() * (maxCloudHeight - minCloudHeight + 1)) + minCloudHeight,\n        reflectedImage: Math.random() < 0.5,\n      }]));\n    }\n  }, []);\n\n  console.log(clouds);\n  return (\n    \n    <div className=\"App\">\n        <p>\n          Number of clouds: {count}\n        </p>\n        <button onClick={() => {\n          setCount(0);\n          setRunning(1);\n        }}>\n          Start over\n        </button>\n\n        <p>\n          You're doing great! <Emoji symbol=\"ðŸ˜…\" label=\"nervous-laugh\"/>\n        </p>\n        <div>\n          {clouds.map((height, reflectedImage, key) => {\n              return <img \n                src={cloud} \n                className=\"cloud\"\n                alt=\"cloud\" \n                onAnimationEnd={() => setRunning(0)}\n                running={running} \n                // onClick={() => {\n                //   setCount(count + 1);\n                //   setRunning(0)\n                //   }\n                // }\n              />;\n            })}\n        </div>\n        {/* <img \n          src={cloud} \n          className=\"cloud\"\n          alt=\"cloud\" \n          onAnimationEnd={() => setRunning(0)}\n          running={running} \n          // onClick={() => {\n          //   setCount(count + 1);\n          //   setRunning(0)\n          //   }\n          // }\n        /> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}