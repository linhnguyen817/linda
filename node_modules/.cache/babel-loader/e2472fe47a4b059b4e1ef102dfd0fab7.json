{"ast":null,"code":"var _jsxFileName = \"/Users/linh/linda/src/App.js\",\n    _s = $RefreshSig$();\n\n// import {ReactComponent as ReactLogo} from './images/cloud.svg';\nimport { useState, useEffect } from 'react';\nimport './styles.css';\nimport cloudImg from \"./images/cloud.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Emoji = ({\n  symbol,\n  label\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"emoji\",\n  role: \"img\",\n  \"aria-label\": label ? label : \"\",\n  \"aria-hidden\": label ? \"false\" : \"true\",\n  children: symbol\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = Emoji;\n\nconst getWindowWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\nconst numClouds = 10;\n\nfunction generateClouds() {\n  const maxXOffset = window.innerWidth / 4;\n  let clouds = [];\n\n  for (let i = 0; i < numClouds; i++) {\n    clouds.push({\n      id: i,\n      xOffset: Math.floor(Math.random() * maxXOffset),\n      isReflected: Math.random() < 0.5,\n      isVisible: false // TODO: emoji: ,\n\n    });\n  }\n\n  return clouds;\n}\n\n;\n\nfunction App() {\n  _s();\n\n  const [score, setScore] = useState(0);\n  const [cloudIndex, setCloudIndex] = useState(0);\n  const [clouds, setClouds] = useState(generateClouds()); // make generated clouds visible at set interval\n\n  const cloudIntervalTime = 3000;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let newClouds = [...clouds];\n      newClouds[cloudIndex].isVisible = true;\n      setClouds(newClouds);\n      setCloudIndex(cloudIndex >= numClouds - 1 ? 0 : cloudIndex + 1);\n    }, cloudIntervalTime);\n    return () => clearInterval(interval);\n  }, [cloudIndex, clouds]); // resize clouds as window width changes\n\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth());\n  useEffect(() => {\n    // timeoutId for debounce mechanism\n    let timeoutId = null;\n\n    function handleResize() {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId); // change width from the state object after 150 milliseconds\n\n      timeoutId = setTimeout(() => setWindowWidth(getWindowWidth()), 150); // re-calculate cloud offsets with new window width\n\n      let maxXOffset = windowWidth / 4;\n      clouds.map(cloud => {\n        cloud.xOffset = Math.floor(Math.random() * maxXOffset);\n      });\n    }\n\n    ; // set resize listener\n\n    window.addEventListener('resize', handleResize); // clean up function\n\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You're doing great! \", /*#__PURE__*/_jsxDEV(Emoji, {\n        symbol: \"\\uD83D\\uDE05\",\n        label: \"nervous-laugh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cloud-wrapper\",\n      children: clouds.map(cloud => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cloudImg,\n          className: \"cloud\",\n          alt: \"cloud\",\n          \"data-running\": cloud.isVisible,\n          onAnimationEnd: () => {\n            cloud.isVisible = false;\n          },\n          onClick: () => {\n            setScore(score + 1);\n            cloud.isVisible = false;\n          },\n          style: {\n            transform: (cloud.isReflected ? \"scaleX(-1)\" : \"scaleX(1)\") + ` translateX(${cloud.xOffset}px)`\n          }\n        }, cloud.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"C13GAFL/oglPa9VWeIcLFWzWsWg=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Emoji\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/linh/linda/src/App.js"],"names":["useState","useEffect","Emoji","symbol","label","getWindowWidth","window","innerWidth","document","documentElement","clientWidth","body","numClouds","generateClouds","maxXOffset","clouds","i","push","id","xOffset","Math","floor","random","isReflected","isVisible","App","score","setScore","cloudIndex","setCloudIndex","setClouds","cloudIntervalTime","interval","setInterval","newClouds","clearInterval","windowWidth","setWindowWidth","timeoutId","handleResize","clearTimeout","setTimeout","map","cloud","addEventListener","removeEventListener","cloudImg","transform"],"mappings":"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","sourcesContent":["// import {ReactComponent as ReactLogo} from './images/cloud.svg';\nimport { useState, useEffect } from 'react';\nimport './styles.css';\nimport cloudImg from './images/cloud.svg';\n\nconst Emoji = ({symbol, label}) => (\n  <span\n      className=\"emoji\"\n      role=\"img\"\n      aria-label={label ? label : \"\"}\n      aria-hidden={label ? \"false\" : \"true\"}\n  >\n      {symbol}\n  </span>\n);\n\nconst getWindowWidth = () => window.innerWidth \n  || document.documentElement.clientWidth \n  || document.body.clientWidth;\n\nconst numClouds = 10;\nfunction generateClouds() {\n  const maxXOffset = window.innerWidth / 4;\n\n  let clouds = [];\n  for (let i = 0; i < numClouds; i++) {\n    clouds.push({\n      id: i,\n      xOffset: Math.floor(Math.random() * maxXOffset),\n      isReflected: Math.random() < 0.5,\n      isVisible: false,\n      // TODO: emoji: ,\n    });\n  }\n  return clouds;\n};\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [cloudIndex, setCloudIndex] = useState(0);\n  const [clouds, setClouds] = useState(generateClouds());\n\n  // make generated clouds visible at set interval\n  const cloudIntervalTime = 3000;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let newClouds = [...clouds];\n      newClouds[cloudIndex].isVisible = true;\n      setClouds(newClouds);\n      setCloudIndex(cloudIndex >= numClouds - 1 ? 0 : cloudIndex + 1);\n    }, cloudIntervalTime);\n    \n    return () => clearInterval(interval);\n  }, [cloudIndex, clouds]);\n\n  // resize clouds as window width changes\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth());\n  \n  useEffect(() => {\n    // timeoutId for debounce mechanism\n    let timeoutId = null;\n    function handleResize() {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId);\n      // change width from the state object after 150 milliseconds\n      timeoutId = setTimeout(() => setWindowWidth(getWindowWidth()), 150);\n\n      // re-calculate cloud offsets with new window width\n      let maxXOffset = windowWidth / 4;\n      clouds.map(cloud => {\n        cloud.xOffset = Math.floor(Math.random() * maxXOffset);\n      })\n    };\n\n    // set resize listener\n    window.addEventListener('resize', handleResize);\n\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', handleResize);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <p>\n        Score: {score}\n      </p>\n      <p>\n        You're doing great! <Emoji symbol=\"😅\" label=\"nervous-laugh\"/>\n      </p>\n      \n      <div className=\"cloud-wrapper\">\n        {clouds.map(cloud => {\n            return <img \n              key={cloud.id}\n              src={cloudImg} \n              className=\"cloud\"\n              alt=\"cloud\"\n              data-running={cloud.isVisible} \n              onAnimationEnd={() => {\n                cloud.isVisible = false;\n              }}\n              onClick={() => {\n                setScore(score + 1);\n                cloud.isVisible = false;\n                }\n              }\n              style={{\n                transform: (cloud.isReflected ? \"scaleX(-1)\" : \"scaleX(1)\") + \n                            ` translateX(${cloud.xOffset}px)`\n              }}\n            />;\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}